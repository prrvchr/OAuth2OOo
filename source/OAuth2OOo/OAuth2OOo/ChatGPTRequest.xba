<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="ChatGPTRequest" script:language="StarBasic">

Rem ╔════════════════════════════════════════════════════════════════════════════════════╗
Rem ║                                                                                    ║
Rem ║   Copyright (c) 2020 https://prrvchr.github.io                                     ║
Rem ║                                                                                    ║
Rem ║   Permission is hereby granted, free of charge, to any person obtaining            ║
Rem ║   a copy of this software and associated documentation files (the &quot;Software&quot;),     ║
Rem ║   to deal in the Software without restriction, including without limitation        ║
Rem ║   the rights to use, copy, modify, merge, publish, distribute, sublicense,         ║
Rem ║   and/or sell copies of the Software, and to permit persons to whom the Software   ║
Rem ║   is furnished to do so, subject to the following conditions:                      ║
Rem ║                                                                                    ║
Rem ║   The above copyright notice and this permission notice shall be included in       ║
Rem ║   all copies or substantial portions of the Software.                              ║
Rem ║                                                                                    ║
Rem ║   THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,                  ║
Rem ║   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES                  ║
Rem ║   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.        ║
Rem ║   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY             ║
Rem ║   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,             ║
Rem ║   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE       ║
Rem ║   OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                                    ║
Rem ║                                                                                    ║
Rem ╚════════════════════════════════════════════════════════════════════════════════════╝


Sub Main

    Rem Ask the user for their OpenAI API key
    sKey = InputBox(&quot;Please enter your OpenAI API key&quot;, _
                    &quot;OpenAI ChatGPT Request&quot;, _
                    &quot;sk-...&quot;)
    Rem User clicked Cancel
    if sKey = &quot;&quot; then
        exit sub
    endif

    sQuery = &quot;How to make HTTP requests in Basic in LibreOffice?&quot;

    Rem First we need to create the OAuth2Service
    oauth2 = CreateUnoService(&quot;io.github.prrvchr.OAuth2OOo.OAuth2Service&quot;)
    
    Rem To execute an HTTP request we first need a HTTP Request parameter
    parameter = oauth2.getRequestParameter(&quot;ChatGPT&quot;)
    
    Rem The HTTP method needed is POST
    parameter.Method = &quot;POST&quot;
    
    parameter.Url = &quot;https://api.openai.com/v1/chat/completions&quot;
    
    Rem Default Authentication is OAuth2 but can be disabled with
    parameter.NoAuth = true
    
    Rem You need to put your API key in the HTTP Request Headers Authorization
    apikey = &quot;Bearer &quot; + sKey
    parameter.setHeader(&quot;Authorization&quot;, apikey)
    
    Rem We need to create the Request Json Body needed by ChatGPT API call: https://platform.openai.com/docs/guides/gpt/chat-completions-api
    builder = parameter.getJsonBuilder()
    json = builder.createObject()_
                  .addString(&quot;model&quot;, &quot;gpt-3.5-turbo&quot;)_
                  .addArray(&quot;messages&quot;, builder.createArray() _
                                               .addObject(builder.createObject() _
                                                                 .addString(&quot;role&quot;, &quot;system&quot;) _
                                                                 .addString(&quot;content&quot;, &quot;You are a helpful assistant.&quot;)) _
                                               .addObject(builder.createObject() _
                                                                 .addString(&quot;role&quot;, &quot;user&quot;) _
                                                                 .addString(&quot;content&quot;, sQuery))) _
                  .build()

    Rem We assign the Json data to the HTTP Request
    parameter.setJsonStructure(json)

    Rem To obtain the HTTP response we use the execute() method
    Rem of the OAuth2Service service with the HTTP parameter as argument
    response = oauth2.execute(parameter)

    if response.Ok then
        sText = response.getJson().getStructure(&quot;choices&quot;).getStructure(0).getStructure(&quot;message&quot;).getString(&quot;content&quot;)
    else
        sText = response.Text
    endif

    Rem When it is finished we have to close the HTTP response
    response.close()

    Msgbox sText

End Sub

</script:module>